my_remote_host: 'remotehost.{{ ocp_base_domain }}'
my_remote_user: ocuser
ocp_version: 4.14.16
ocp_channel: stable
ocp_base_domain: poc.lan
ocp_cluster_name: ocp
ocp_compute_hosts: 3
ocp_control_hosts: 3

# Feature Toggles
dns_install: false # installs dnsmasq on the node and configures the lookups
install_registry: false # defines if you install the registry or not. The binary will get downloaded anyway
mirror_mode: file # mirror_mode defines, if you mirror to disk (file) or into the created mirror_registry (registry)
mirror_v2: false # mirror_v2 defines if oc-mirror is executed with the --v2 option.
# this currently does not support all settings
# to be fair it only covers HEAD mirroring of the full catalog
# from 4.18 onwards v1 is deprecated

# Networks
ocp_cluster_network: '10.128.0.0/14' # internal network for the cluster pods
ocp_host_prefix: '23'
ocp_machine_network: '192.168.0.0/24' # network which is physically connected to the nodes / Admin network
ocp_machine_network_default_gw: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.1"

ocp_service_network: '172.30.0.0/16'
ocp_api_vip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.100"
ocp_ingress_vip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.200"

# set to first of the machines
ocp_rendezvous_ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.11"
ocp_machines:
  - name: node1
    mac: 00:ef:44:21:e6:01
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.11"
  - name: node2
    mac: 00:ef:44:21:e6:02
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.12"
  - name: node3
    mac: 00:ef:44:21:e6:03
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.13"
  - name: node4
    mac: 00:ef:44:21:e6:04
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.14"
  - name: node5
    mac: 00:ef:44:21:e6:05
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.15"
  - name: node6
    mac: 00:ef:44:21:e6:06
    ip: "{{ ocp_machine_network.split('.')[:3] | join('.') }}.16"

ocp_dns_server: 192.168.111.1


# secrets
ocp_pull_secret: 'replaceme'
ocp_rh_pull_secret: 'replaceme'
# define, if you do not want to autogenerate keys, null will generate them
ocp_ssh_pub: null

config_path: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/configs"

# this dir is for the offline packages
mirror_data_dir: /data/oc-mirror-data
mirror_data_dir_owner: "{{ lookup('ansible.builtin.env', 'USER') }}"
mirror_data_dir_group: "{{ lookup('ansible.builtin.env', 'USER') }}"
mirror_data_drive: "/dev/vdc"

mirror_registry_hostname: "registry.{{ ocp_base_domain }}"
mirror_registry_ip: 192.168.0.250
mirror_registry_user: init
mirror_registry_password: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=32) }}"
mirror_registry_rootca_pass: "{{ lookup('ansible.builtin.password', config_path + '/rootca_pass', chars=['ascii_lowercase', 'digits'], length=32) }}"

mirror_registry_version: 1.3.11

# this dir is the backend for the mirror registry
mirror_registry_data_dir: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/mirror-registry/data"
mirror_registry_data_group: "{{ lookup('ansible.builtin.env', 'USER') }}"
mirror_registry_data_user: "{{ lookup('ansible.builtin.env', 'USER') }}"
mirror_registry_data_drive: "/dev/vdb"

# this dir is where the certificates are saved (rootCA and certificate)
mirror_registry_cert_dir: "{{ lookup('ansible.builtin.env', 'HOME') }}/ocp_tools/mirror-registry"

rh_operators:
  # can be inprecise, we grep for this names in the operator list
  # small useful operators
  - web-terminal
  # storage operators
  # layered products
  - serverless

certified_operators: []
certified_operators_example:
  - gpu-operator-certified

additional_images:
  - k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2
