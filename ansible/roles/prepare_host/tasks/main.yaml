---
- name: ensure directory exists
  ansible.builtin.file:
    dest: "${XDG_RUNTIME_DIR}/containers/"
    state: directory
  when: ocp_rh_pull_secret != "replaceme"

- name: login to red hat registry
  ansible.builtin.copy:
    content: "{{ ocp_rh_pull_secret }}"
    dest: "${XDG_RUNTIME_DIR}/containers/auth.json"
  when: ocp_rh_pull_secret != "replaceme"

- name: include package download and configuration
  ansible.builtin.import_tasks: create_packages.yaml
  tags:
    - packages

- name: include tasks for ssh keypair
  ansible.builtin.import_tasks: create_ssh_keypair.yaml
  when: ocp_ssh_pub is undefined or
        ocp_ssh_pub == None or
        ocp_ssh_pub| length == 0
  tags:
    - ssh_keypair

- name: include tasks for certificate generation
  ansible.builtin.import_tasks: create_certificates.yaml
  tags:
    - mirror_registry
    - certificates

- name: include tasks for pullsecret generation
  ansible.builtin.import_tasks: create_disco_pull_secret.yaml
  tags:
    - disco_pull_secret

# if mode=file, it will mount the drive to the mirror data dir
- name: include mirror_data_drive configuration
  ansible.builtin.import_tasks: create_mount_drive.yaml
  vars:
    device: {{ mirror_data_drive }}
    dir: {{ mirror_data_dir }}
  tags:
    - mirror
  when: mode == file

# if mode != file it will mount a drive to teh registry data dir
- name: include mirror_registry_drive configuration
  ansible.builtin.import_tasks: create_mount_drive.yaml
  vars:
    device: {{ mirror_registry_data_drive }}
    dir: {{ mirror_registry_data_dir }}
  tags:
    - mirror
  when: mode != live

# if install_registry= true, we install the registry on the EXECUTING NODE
- name: include the install of mirror-registry
  ansible.builtin.import_tasks: create_mirror_registry.yaml
  tags:
    - mirror
  when: install_registry == true

- name: include tasks for operatorversions (rh index)
  ansible.builtin.import_tasks: create_operator_versions.yaml
  vars:
    operator_catalog: "registry.redhat.io/redhat/redhat-operator-index"
    operators: "{{ rh_operators }}"
  run_once: false
  when: ( rh_operators is defined ) and
        ( rh_operators | length > 0 )
  tags:
    - isc

- name: set operatorversions (rh index)
  ansible.builtin.set_fact:
    rh_operator_packages: "{{ operator_versions }}"
  when: ( rh_operators is defined ) and
        ( rh_operators | length > 0 )
  tags:
    - isc

- name: include tasks for operatorversions (certified index)
  ansible.builtin.import_tasks: create_operator_versions.yaml
  vars:
    operator_catalog: "registry.redhat.io/redhat/certified-operator-index"
    operators: "{{ certified_operators }}"
  when: ( certified_operators is defined ) and
        ( certified_operators | length > 0 )
  tags:
    - isc

- name: set operatorversions (certified index)
  ansible.builtin.set_fact:
    certified_operator_packages: "{{ operator_versions }}"
  when: ( certified_operators is defined ) and
        ( certified_operators | length > 0 )
  tags:
    - isc

- name: generate ImageSetConfiguration (v1)
  ansible.builtin.template:
    src: ./templates/imagesetconfiguration.yaml.j2
    dest: "{{ config_path }}/imagesetconfiguration.yaml"
    mode: 0644
  when: mirror_v2 == false
  tags:
    - isc

- name: include tasks for icsp creation (v1)
  ansible.builtin.include_tasks: create_icsp.yaml
  when: mirror_v2 == false
  tags:
    - icsp

- name: generate ImageSetConfiguration (v2)
  ansible.builtin.template:
    src: ./templates/imagesetconfiguration-v2.yaml.j2
    dest: "{{ config_path }}/imagesetconfiguration.yaml"
    mode: 0644
  when: mirror_v2 == true
  tags:
    - isc

- name: include tasks for icsp creation (v1)
  ansible.builtin.include_tasks: create_icsp.yaml
  when: mirror_v2 == true
  tags:
    - icsp

- name: generate install-config
  ansible.builtin.template:
    src: ./templates/install-config.yaml.j2
    dest: "{{ config_path }}/install-config.yaml"
    mode: 0600
  tags:
    - install_configs

- name: generate agent-config
  ansible.builtin.template:
    src: ./templates/agent-config.yaml.j2
    dest: "{{ config_path }}/agent-config.yaml"
    mode: 0600
  tags:
    - install_configs

- name: generate remote commands
  ansible.builtin.template:
    src: ./templates/commands.txt.j2
    dest: "{{ config_path }}/commands.txt"
    mode: 0600
  tags:
    - install_configs
